"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getAndroidAabBuild=exports.getAndroidApkBuild=void 0;const tslib_1=require("tslib"),tools_1=require("../../utils/tools"),zip_1=require("../../utils/zip"),archive=tslib_1.__importStar(require("./archive")),miniappJson_1=require("../../utils/miniappJson"),android=tslib_1.__importStar(require("../android-miniapp-toolkit/dist/index")),log=tslib_1.__importStar(require("../../utils/log")),urlConfig=tslib_1.__importStar(require("../../config/url.config")),ciRequest_1=require("../utils/ciRequest"),sign_1=require("../../utils/sign"),request_1=require("../../utils/request"),path=require("path"),fs=require("fs-extra"),safeGet=require("licia/safeGet"),find=require("licia/find"),trim=require("licia/trim"),endWith=require("licia/endWith"),clone=require("licia/clone"),isUndef=require("licia/isUndef"),sleep=require("licia/sleep"),now=require("licia/now"),each=require("licia/each"),fileSize=require("licia/fileSize"),promisify=require("licia/promisify"),AdmZip=require("adm-zip"),rmdir=promisify(require("licia/rmdir"));var TaskStatus;!function(i){i[i.Pending=1]="Pending",i[i.Running=2]="Running",i[i.Success=3]="Success",i[i.Fail=4]="Fail"}(TaskStatus||(TaskStatus={}));const waitTimeout=3e5,waitInterval=1e4;class AndroidCloudBuild{constructor(i,t){this.baseDir="",this.infoPath="",this.androidDir="",this.res=Buffer.from([]),this.md5="",this.output="",this.skipCheckRemote=!1,this.packageName="",this.downloadRes=async i=>new Promise((t,e)=>{(0,request_1.simpleRequest)({url:i,method:"get",encoding:null},(i,s,a)=>{if(i)return e(i);t(a)})}),this.aab=i,this.project=t.project,this.ciOpts=t}async build(i,t,e){return await this.init(t),await this.checkBase()||await this.buildBase(),e&&(isUndef(e.keyStore)||""===trim(e.keyStore))&&(e={}),await this.buildCode(i),await this.buildResult(e),this.output}async init(i){const{aab:t,project:e}=this,s=(0,tools_1.generateMD5)(e.projectPath),a=await this.getPackageName();this.androidDir=path.posix.join(this.ciOpts.resourceDir,"android/"+s),this.baseDir=path.posix.join(this.androidDir,t?"aab":"apk"),this.infoPath=path.posix.join(this.androidDir,t?"info-aab.json":"info.json");const r=(0,miniappJson_1.tryGetAndroidMiniappJson)(e.projectPath).version||"",o=`${a}${r?"-"+r:""}.${t?"aab":"apk"}`;this.output=path.posix.join(i,o),this.skipCheckRemote=!1,this.packageName=a,await fs.ensureDir(this.androidDir),this.res=t?await android.pack({configPath:e.projectPath,aab:!0}):await android.pack({configPath:e.projectPath}),this.md5=(0,tools_1.generateMD5)(this.res),log.info(`本地 Android 配置资源打包，大小：${fileSize(this.res.length)} B`)}async buildCode(i){try{const{version:t,desc:e,miniappPkgType:s,remoteDebugEnable:a,useCloudSync:r=!1}=i,o="mini-android",n=this.project,c=path.posix.join(this.baseDir,this.aab?"base/assets/SaaA_embed":"assets/SaaA_embed");fs.existsSync(c)&&await fs.remove(c),await archive.buildProjectArchive(this.ciOpts,{version:t,desc:e,targetPlatform:o,outputDir:c,miniappOptions:{miniappPkgType:s,remoteDebugEnable:a,useCloudSync:r,archVersion:1,needClientJsExtInfo:(0,miniappJson_1.isAndroidNeedClientJsExtInfo)(n.projectPath)}}),log.info("构建项目资源包成功")}catch(i){throw i}}async checkBase(){return await this.checkLocal()||await this.checkRemote()}async checkLocal(){const{infoPath:i}=this;if(!fs.existsSync(i))return log.info("本地未找到基座 APK，需要远程构建"),!1;const t=JSON.parse(await fs.readFile(i,"utf8"));return t.packageName&&t.packageName!==this.packageName?(this.skipCheckRemote=!0,log.info("本地存在基座 APK，但已过期无法使用，需要远程构建"),!1):t.md5===this.md5?(log.info("本地存在符合基座 APK，直接使用"),!0):(log.info("本地存在基座 APK，但已过期无法使用，需要远程构建"),!1)}async checkRemote(){if(this.skipCheckRemote)return!1;const i=await this.waitForRemoteReady();if(i&&i.status===TaskStatus.Success)try{return await this.downloadBase(i.task_id),log.info("远程存在符合基座 APK，直接使用"),!0}catch(i){log.info(i.message)}else log.info("远程不存在基座 APK，需要构建");return!1}async buildBase(){const{infoPath:i}=this,t=await this.createTask();if(!t){if(fs.existsSync(i))return void log.error("该多端应用当周构建次数已用完，本次构建基于本地基座 APK，仅更新小程序代码");throw Error("该多端应用今日构建次数已用完")}log.info("任务创建成功，任务 ID: "+t);const e=await this.waitForRemoteReady();if(e){if(e.status!==TaskStatus.Success)throw e.status===TaskStatus.Fail?Error("基座 APK 构建失败，错误信息："+e.errmsg):Error("基座 APK 构建超时，请稍候重试");await this.downloadBase(e.task_id)}}async buildResult(i){var t;const e=this.project,s=(0,miniappJson_1.tryGetAndroidMiniappJson)(e.projectPath);(null===(t=s.channel)||void 0===t?void 0:t.value)&&(this.output=`${this.output.slice(0,-4)}-${s.channel.value}${this.aab?".aab":".apk"}`),await this.genZip(),log.info("对 APK 进行签名");try{this.aab?await android.signV1(this.output,i):await android.sign(this.output,i)}catch(i){throw Error("APK 签名失败，请确保证书配置正确，错误信息："+i.message)}log.info("APK 构建成功，保存位置："+this.output)}async genZip(){const{baseDir:i,output:t}=this,e=new AdmZip;await e.addLocalFolderPromise(i);const s=clone(e.getEntries());this.aab?each(s,i=>{i.isDirectory&&(Object.defineProperty(i,"isDirectory",{get:()=>!1}),e.deleteFile(i))}):each(s,i=>{"resources.arsc"===i.entryName&&(i.header.method=0)});const a=await e.toBufferPromise();await fs.writeFile(t,a)}async createTask(){const i=this.project.appid,t=await(0,sign_1.getSignature)(this.project.privateKey,i),e=await(0,ciRequest_1.ciCustomRequest)(`${urlConfig.uploadCloudBuildResourcePack}?os_type=2&appid=${i}&signature=${encodeURIComponent(t)}&robot=${this.ciOpts.robot}`,this.res,{"content-type":"application/octet-stream"}),s=e.baseresponse||{errcode:-1e4},a=parseInt(s.errcode,10);if(0===a)return e.task_id;if(10002053===a)return"";throw Error("任务创建失败，错误码："+a)}async waitForRemoteReady(){const i=now();for(;;){const t=await this.getTask();if(!t||t.status===TaskStatus.Success||t.status===TaskStatus.Fail||now()-i>3e5)return t;t.status===TaskStatus.Pending?log.info("检查任务状态，等待中..."):t.status===TaskStatus.Running&&log.info("检查任务状态，构建中..."),await sleep(1e4)}}async getTask(){const i=await this.getTaskList();return find(i,i=>!0===i.is_self)}async getTaskList(){return(await(0,ciRequest_1.ciSimpleRequest)({privateKey:this.project.privateKey,appid:this.project.appid,cgi:urlConfig.getCloudBuildTaskList+"?os_type=2",robot:this.ciOpts.robot})).list}async downloadBase(i){log.info("下载远程基座 APK，任务 ID："+i);const{pkgUrl:t,resUrl:e}=await this.getTaskResultUrl(i),s=await this.downloadRes(e),a=(0,tools_1.generateMD5)(s);if(a!==this.md5)throw Error("远程存在基座 APK，但已过期无法使用，需要重新远程构建");await this.downloadPkg(t);const r={taskId:i,packageName:this.packageName,md5:a};await fs.writeFile(this.infoPath,JSON.stringify(r,null,2),"utf8")}downloadPkg(i){const{baseDir:t,infoPath:e}=this,s=path.resolve(this.androidDir,"base.zip"),a=fs.createWriteStream(s,{mode:511});return new Promise((r,o)=>{(0,request_1.simpleRequest)({url:i,method:"get"},i=>{i&&o(i)}).pipe(a),a.on("error",i=>{o(i)}),a.on("close",async()=>{try{fs.existsSync(e)&&await fs.unlink(e),fs.existsSync(t)&&await rmdir(t),await(0,zip_1.unzip)(s,t);const i=path.resolve(t,"META-INF"),a=await fs.readdir(i);for(let t=0,e=a.length;t<e;t++){const e=a[t];if(endWith(e,".RSA")||endWith(e,".SF")){const t=path.resolve(i,e);await fs.unlink(t)}}await fs.unlink(s)}catch(i){return o(i)}r({})})})}async getTaskResultUrl(i){const t=await(0,ciRequest_1.ciSimpleRequest)({cgi:`${urlConfig.getCloudBuildPkgUrl}?task_id=${i}`,privateKey:this.project.privateKey,appid:this.project.appid,robot:this.ciOpts.robot});return{pkgUrl:t.pkg_url,resUrl:t.resource_url}}async getPackageName(){const i=this.project,t=await i.miniappAttr();return safeGet(t,"mobileapp_info.android_package_name")||"com.tencent.weauth"}}const getAndroidApkBuild=i=>new AndroidCloudBuild(!1,i);exports.getAndroidApkBuild=getAndroidApkBuild;const getAndroidAabBuild=i=>new AndroidCloudBuild(!0,i);exports.getAndroidAabBuild=getAndroidAabBuild;