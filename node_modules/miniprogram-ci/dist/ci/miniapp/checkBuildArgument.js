"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.transformIOSBuildArgument=exports.transformAndroidBuildArgument=exports.IMiniappPkgType=exports.publicKeyForP12password=exports.defaulPasswordPlaceHolderForCache=void 0;const tslib_1=require("tslib"),miniappJson_1=require("../../utils/miniappJson"),tools_1=require("../../utils/tools"),fs_extra_1=tslib_1.__importDefault(require("fs-extra")),path_1=tslib_1.__importDefault(require("path")),isWindows_1=tslib_1.__importDefault(require("licia/isWindows")),moment=require("moment"),crypto=require("crypto");var IMiniappPkgType;exports.defaulPasswordPlaceHolderForCache="*******",exports.publicKeyForP12password="-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDRsmgcQqaCjlFVITfAzIWsjpxj\nynoXetXQhmIspi86V6rtq2BENl9HrrX18XsQ8Qn6jsNJ6mtvSUUflvpLnEQMM1M7\nwagNazL0A2KFw97Br9sE+CVJdctC/dmportNjrbekNYHacT1bL+GDpatAaD4Pnwy\nx3yJsmqx3tJun1G++wIDAQAB\n-----END PUBLIC KEY-----\n",function(e){e.Release="Release",e.Debug="Debug",e.HotReload="HotReload"}(IMiniappPkgType=exports.IMiniappPkgType||(exports.IMiniappPkgType={}));const validateFileExistenceAndExtname=(e,r,o,i="",t="")=>{if(t&&(o=path_1.default.join(t,o)),!fs_extra_1.default.existsSync(o))throw new Error(`${e}: ${r} 无法找到文件 ${o} 文件`);if(i&&path_1.default.extname(o)!==i)throw new Error(`${e}: ${r} 文件后缀必须为 ${i}`)},unifyiOSBuildFilePathForWindows=(e,r)=>{e[r]&&(e[r]=(0,tools_1.unifyPath)(e[r]))},transformAndroidBuildArgument=e=>{const{project:r,keyStore:o,keyPass:i,storePass:t,keyAlias:s,output:n,useAab:a=!1,desc:p="",isUploadResourceBundle:l=!1,resourceBundleVersion:u="",resourceBundleDesc:d="",robot:c=1}=e;if(!r)throw new Error("缺少参数 project");const f=r.projectPath,m=(0,miniappJson_1.tryGetAndroidMiniappJson)(f),P=`CI robot ${c||1} 在 ${moment().format("LLL")} 提交上传`;if(!m.version)throw new Error("project.miniapp.json 中缺少 miniapp-android.version 字段");if(!n)throw new Error("缺少参数 output");validateFileExistenceAndExtname("build-apk options","keyStore",o);const w=path_1.default.extname(o);if(w&&![".jks",".keystore"].includes(w))throw new Error("keystore 文件后缀需是 .jks 或者 .keystore");if(!t)throw new Error("缺少参数 storePass");if(!i)throw new Error("缺少参数 keyPass");if(!s)throw new Error("缺少参数 keyAlias");return{buildArchiveOpts:{version:m.version,desc:e.desc||P,miniappPkgType:IMiniappPkgType.Release,useCloudSync:l,remoteDebugEnable:!1},cloudBuildInfo:{certificateInfo:{androidCertificate:{keyStore:o,keyAlias:s,keyPass:i,storePass:t}},miniappPkgType:IMiniappPkgType.Release,remoteDebugEnable:!1,useCloudUpload:l,useAab:a,packageVersion:u||m.version,packageDesc:d||P,uploadAppInfo:{uploadBetaVersion:!1,userVersion:m.version,userDesc:p||P},recordInfo:""}}};exports.transformAndroidBuildArgument=transformAndroidBuildArgument;const transformIOSBuildArgument=e=>{var r;const{project:o,output:i,isDistribute:t=!1,isRemoteBuild:s=!1,profilePath:n="",certificateName:a="",p12Path:p="",p12Password:l="",tpnsProfilePath:u="",desc:d="",isUploadBeta:c=!1,isUploadResourceBundle:f=!1,resourceBundleVersion:m="",resourceBundleDesc:P="",robot:w}=e;if(!o)throw new Error("缺少参数 project");const h=o.projectPath,y=(0,miniappJson_1.getRawMiniappJson)(o.projectPath),b=(0,miniappJson_1.tryGetIOSMiniappJson)(h),E=`CI robot ${w||1} 在 ${moment().format("LLL")} 提交上传`;if(!b.version)throw new Error("project.miniapp.json 中缺少 miniapp-ios.version 字段");if(!i)throw new Error("缺少参数 output");if(isWindows_1.default&&!s)throw new Error("windows 仅支持远程构建");const A={useRemote:s,p12:p,p12password:l,certificate:a,profile:n,tpnsProfile:u},g={isPublish:t};if(validateFileExistenceAndExtname("build-ipa options","profile",n,".mobileprovision",o.projectPath),g.profilePath=s?n:path_1.default.join(o.projectPath,n),!a)throw new Error("缺少参数 certificateName");if(g.certificateName=a,A.useRemote){if(validateFileExistenceAndExtname("build-ipa options","p12",p,".p12",o.projectPath),!l)throw new Error("缺少参数 p12Password");g.certificatePassword=l,g.certificatePath=p,isWindows_1.default&&(unifyiOSBuildFilePathForWindows(A,"profile"),unifyiOSBuildFilePathForWindows(A,"tpnsProfile"),unifyiOSBuildFilePathForWindows(A,"p12"));const e=Buffer.from(A.p12password,"utf8"),r=crypto.publicEncrypt(exports.publicKeyForP12password,e);A.p12passwordEncrypted=r.toString("base64"),y["mini-ios"].buildCloud=A,delete A.p12password,(0,miniappJson_1.writeMiniAppJsonWithProjectPath)(o.projectPath,y)}!0===(null===(r=b.tpush)||void 0===r?void 0:r.useExtendedLib_WeAppTPNS)&&validateFileExistenceAndExtname("build-ipa options","tpnsProfile",u,".mobileprovision",o.projectPath);return{buildArchiveOpts:{version:b.version,desc:e.desc||E,miniappPkgType:IMiniappPkgType.Release,useCloudSync:f,remoteDebugEnable:!1},cloudBuildInfo:{certificateInfo:{signType:"certificate",selfCertificate:g},miniappPkgType:IMiniappPkgType.Release,remoteDebugEnable:!1,useCloudUpload:f,packageVersion:m||b.version,packageDesc:P||E,uploadAppInfo:{uploadBetaVersion:c,userVersion:b.version,userDesc:d||E},useRemoteCloudBuild:s||!1,recordInfo:""}}};exports.transformIOSBuildArgument=transformIOSBuildArgument;