"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getIOSCloudBuild=void 0;const tslib_1=require("tslib"),tools_1=require("../../utils/tools"),miniappJson_1=require("../../utils/miniappJson"),getcompiler_1=require("../getcompiler"),log=tslib_1.__importStar(require("../../utils/log")),packfile_1=require("../utils/packfile"),archive=tslib_1.__importStar(require("./archive")),urlConfig=tslib_1.__importStar(require("../../config/url.config")),ciRequest_1=require("../utils/ciRequest"),sign_1=require("../../utils/sign"),request_1=require("../../utils/request"),zip_1=require("../../utils/zip"),zlib_1=tslib_1.__importDefault(require("zlib")),path=require("path"),fs=require("fs-extra"),safeGet=require("licia/safeGet"),promisify=require("licia/promisify"),fileSize=require("licia/fileSize"),now=require("licia/now"),find=require("licia/find"),sleep=require("licia/sleep"),gzip=promisify(zlib_1.default.gzip);var OSType,TaskStatus;!function(i){i[i.iOS=1]="iOS",i[i.Android=2]="Android"}(OSType||(OSType={})),function(i){i[i.Pending=1]="Pending",i[i.Running=2]="Running",i[i.Success=3]="Success",i[i.Fail=4]="Fail"}(TaskStatus||(TaskStatus={}));const waitTimeout=3e5,waitInterval=1e4,TransformTipsURL="https://web-v2-1g8g0y2x3197301a-1304825656.tcloudbaseapp.com/important_miniapp/MiniAppBuildTips.json?sign=0f07b014a760d699cf2c8a9bb84845bf&t=1724920547";class IOSCloudBuild{constructor(i){this.baseDir="",this.materialDir="",this.iOSDir="",this.iPADir="",this.res=Buffer.from([]),this.md5="",this.output="",this.buildSuccess=!1,this.logAbPath="",this.project=i.project,this.ciOpts=i}async build(i,t,e){return this.cloudBuildOptions=t,await this.init(e),await this.buildMaterial(i),await this.buildBase(),await this.buildResult(),this.output}async init(i){const t=this.project,e=(0,tools_1.generateMD5)(t.projectPath),s=await this.getBundleId();if(this.iOSDir=path.join(this.ciOpts.resourceDir,"iOSCloudBuild/"+e),this.baseDir=path.join(this.iOSDir),this.materialDir=path.join(this.iOSDir,"project"),this.iPADir=path.join(this.iOSDir,"ipa"),i){const e=(0,miniappJson_1.tryGetAndroidMiniappJson)(t.projectPath).version||"",a=this.getFinalIpaName(s,e);this.output=path.posix.join(i,a)}else this.output=path.posix.join(this.iOSDir,"app.ipa");await fs.ensureDir(this.iOSDir),await fs.ensureDir(this.materialDir),await fs.emptyDir(this.materialDir)}async packAllFilesInDir(i){const t=await(0,packfile_1.packFiledir)(i);return await gzip(t.data)}async buildMaterial(i){let t;try{t=await(0,getcompiler_1.getBuilder)(this.project,{devtoolMessagehub:{showBuildLog:(i,t,e)=>{log.info("miniprogram-ci native compile",t,e)}}});const e=await t.getNativeCompiler();await e.packIOSCloudBuildMaterial(Object.assign(Object.assign({},this.cloudBuildOptions),{matrialDistPath:this.materialDir})),await this.buildCode(i),this.res=await this.packAllFilesInDir(this.materialDir),this.md5=(0,tools_1.generateMD5)(this.res),log.info(`本地 iOS 配置资源打包，大小：${fileSize(this.res.length)} B`)}catch(i){throw i}finally{null==t||t.destroy()}}async buildCode(i){try{const{version:t,desc:e,miniappPkgType:s,remoteDebugEnable:a,useCloudSync:r=!1}=i,o="mini-ios",n=path.posix.join(this.materialDir,"__miniappWxapkg");if(fs.existsSync(n)&&await fs.remove(n),await archive.buildProjectArchive(this.ciOpts,{version:t,desc:e,targetPlatform:o,outputDir:n,miniappOptions:{miniappPkgType:s,remoteDebugEnable:a,useCloudSync:r,archVersion:1}}),!fs.existsSync(n))throw new Error("ios cloudbuild failed: cant find buildCode result: "+n);log.info("构建项目资源包成功")}catch(i){throw i}}async buildBase(){const i=await this.createTask();if(!i)throw Error("该多端应用当周构建次数已用完，本次构建基于本地基座 IOS，仅更新小程序代码");log.info("任务创建成功，任务 ID: "+i);const t=await this.waitForRemoteReady();if(t)if(t.status===TaskStatus.Success)this.buildSuccess=!0,await this.downloadBase(t.task_id,!0);else{if(t.status!==TaskStatus.Fail)throw Error("iOS App 远程云构建超时，请稍候重试");this.buildSuccess=!1,log.info("IPA 构建失败，错误信息："+t.errmsg),await this.downloadBase(t.task_id,!1)}}async buildResult(){if(!this.buildSuccess){log.info("下载日志成功，保存位置："+this.output);let{body:i}=await(0,request_1.request)({url:TransformTipsURL,method:"get"});try{i=JSON.parse(i)}catch(i){}const t=null==i?void 0:i.ios,e=(fs.readdirSync(this.logAbPath)||[]).find(i=>i.endsWith(".log"));let s=!1;throw e&&t&&fs.readFileSync(path.join(this.logAbPath,e),{encoding:"utf8"}).split("\n").forEach(i=>{const e=Object.keys(t).find(t=>i.includes(t));e&&(s=!0,log.error(`[${t[e].code}] ${t[e].msg} 原信息：${i}`))}),s?new Error("错误详细日志如上"):new Error("IPA 构建失败，请前往社区反馈 https://developers.weixin.qq.com/community/minihome/mixflow/2889188691586351105")}log.info("IPA 构建成功，保存位置："+this.output)}async createTask(){const i=this.project.appid,t=await(0,sign_1.getSignature)(this.project.privateKey,i),e=await(0,ciRequest_1.ciCustomRequest)(`${urlConfig.uploadCloudBuildResourcePack}?os_type=${OSType.iOS}&appid=${i}&signature=${encodeURIComponent(t)}&robot=${this.ciOpts.robot}`,this.res,{"content-type":"application/octet-stream"}),s=e.baseresponse||{errcode:-1e4},a=parseInt(s.errcode,10);if(0===a)return e.task_id;if(10002053===a)return"";throw Error("任务创建失败，错误码："+a)}async waitForRemoteReady(){const i=now();for(;;){const t=await this.getTask();if(!t||t.status===TaskStatus.Success||t.status===TaskStatus.Fail||now()-i>3e5)return t;t.status===TaskStatus.Pending?log.info("检查任务状态，等待中..."):t.status===TaskStatus.Running&&log.info("检查任务状态，构建中..."),await sleep(1e4)}}async getTask(){const i=await this.getTaskList();return find(i,i=>!0===i.is_self)}async getTaskList(){return(await(0,ciRequest_1.ciSimpleRequest)({privateKey:this.project.privateKey,appid:this.project.appid,cgi:`${urlConfig.getCloudBuildTaskList}?os_type=${OSType.iOS}`,robot:this.ciOpts.robot})).list}async downloadBase(i,t){t?log.info("下载远程 IPA，任务 ID："+i):log.info("下载远程日志文件，任务 ID："+i);const{pkgUrl:e}=await this.getTaskResultUrl(i);await this.downloadIPA(e,i,t)}downloadIPA(i,t,e){const s=path.resolve(this.iOSDir,t+"/resultZip.zip"),a=path.resolve(this.iOSDir,t+"/result");fs.ensureFileSync(s),fs.ensureDirSync(a);const r=fs.createWriteStream(s,{mode:511});return new Promise((t,o)=>{(0,request_1.simpleRequest)({url:i,method:"get"},i=>{i&&o(i+" at iosCloudBuild download ipa request")}).pipe(r),r.on("error",i=>{o(i+" at iosCloudBuild download ipa deststream")}),r.on("close",async()=>{try{await(0,zip_1.unzip)(s,a)}catch(i){return o(e?"failed process zip file":"build failed! (Cant extract log dir)")}try{const i=fs.readdirSync(a);if(!e){const i=path.join(a,"log");if(fs.existsSync(i)){const e=path.parse(this.output),s=path.posix.join(e.dir,e.name+"_log");return fs.copySync(i,s),this.logAbPath=i,this.output=s,t({})}return o("cant find log dir in result")}{const t=i.find(i=>".ipa"===path.extname(i));if(!t)return o("ipa is not in result");fs.copyFileSync(path.join(a,t),this.output)}}catch(i){return o()}t({})})})}async getTaskResultUrl(i){const t=await(0,ciRequest_1.ciSimpleRequest)({cgi:`${urlConfig.getCloudBuildPkgUrl}?task_id=${i}`,privateKey:this.project.privateKey,appid:this.project.appid,robot:this.ciOpts.robot});return{pkgUrl:t.pkg_url,resUrl:t.resource_url}}async getBundleId(){const i=this.project,t=await i.miniappAttr()||{};return safeGet(t,"mobileapp_info.bundle_id")||"com.tencent.weauth"}getFinalIpaName(i,t){return`${i.replace(/[.*]/g,"")}-${t}.ipa`}}const getIOSCloudBuild=i=>new IOSCloudBuild(i);exports.getIOSCloudBuild=getIOSCloudBuild;