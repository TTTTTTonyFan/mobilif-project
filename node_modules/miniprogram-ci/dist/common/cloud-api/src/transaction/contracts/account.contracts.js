"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.accountBatchCheckWhitelistContract=void 0;const tslib_1=require("tslib"),factory_1=tslib_1.__importDefault(require("./factory")),validations=tslib_1.__importStar(require("../validations/validations")),transactor_1=require("../transactor");function sharedInputTransformation(t,r){return(t&&r===transactor_1.TransactType.HTTP||r===transactor_1.TransactType.IDEPlugin||r===transactor_1.TransactType.IDE)&&(delete t.Action,delete t.Version,delete t.Region),JSON.stringify(t)}function sharedOutputTransformationThrows(t,r){if(!(t=JSON.parse(t))||!t.Response)throw new Error("content empty, "+JSON.stringify(t));const e=t.Response;if(e.Error&&e.Error.Code){const t=new Error(e.Error.Code+", "+e.Error.Message+" ("+(e.RequestId||"?")+")");throw t.code=e.Error.Code,t}return delete e.Error,e}exports.accountBatchCheckWhitelistContract=new factory_1.default("ITCAccountBatchCheckWhitelistInput","ITCAccountBatchCheckWhitelistOutput",validations.accountBatchCheckWhitelistValidation,()=>({cgi_id:-1,service:"account",action:"BatchCheckWhitelist",version:"2018-12-25",region:""}),{inputTransformation:sharedInputTransformation,outputTransformationThrows:sharedOutputTransformationThrows});