"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Builder=void 0;const tslib_1=require("tslib"),nodePath=tslib_1.__importStar(require("path")),index_1=require("./precompiler/index"),nativecompiler_1=require("./nativecompiler"),createSummer_1=require("./createSummer"),singletontask_1=require("../utils/singletontask"),packOptionsHelper_1=tslib_1.__importDefault(require("../utils/packOptionsHelper")),code_analyse_1=require("../common/code-analyse"),tools_1=require("../utils/tools");class CodeDataFileHelper{constructor(e){var t;this.project=e,this._listeners=[],this.onFileChange=()=>{this._listeners.forEach(e=>{e()})},null===(t=e.event)||void 0===t||t.on("fileChange",this.onFileChange)}destroy(){var e;null===(e=this.project.event)||void 0===e||e.off("fileChange",this.onFileChange)}get prefix(){return"miniProgram"===this.project.type||"miniGame"===this.project.type?this.project.miniprogramRoot:"miniProgramPlugin"===this.project.type||"miniGamePlugin"===this.project.type?this.project.pluginRoot:""}stat(e){const t=this.project.stat(this.prefix,e),i=!!(null==t?void 0:t.isFile),r=!!(null==t?void 0:t.isDirectory);if(!i&&!r)return;return{isFile:i,isDirectory:r,size:null==t?void 0:t.size,mtime:(null==t?void 0:t.mtimeMs)||0}}mtime(e){const t=this.stat(e);return t?t.mtime:0}exist(e){return this.project.exists(this.prefix,e)}existDir(e){if(this.exist(e)){const t=this.stat(e);return!!(null==t?void 0:t.isDirectory)}return!1}existFile(e){if(this.exist(e)){const t=this.stat(e);return!!(null==t?void 0:t.isFile)}return!1}filter(e){let t=this.excludeRoot(e,this.prefix);return t=t.filter(e=>!packOptionsHelper_1.default.isIgnoredByRules(e)&&!e.endsWith(".d.ts")),t}getFileList(e="",t=""){const i=this.project.getFileList(this.prefix,t);return this.filter(i)}excludeRoot(e=[],t=""){return t?e.map(e=>nodePath.posix.relative(t,e)):e}async getString(e){return this.project.getFile(this.prefix,e).toString()}async getLocalFileString(e){return this.project.getFile(this.prefix,e).toString("utf-8")}async getJSON(e){const t=await this.getString(e);try{return JSON.parse(t)}catch(e){return null}}async readdir(e){const{files:t,dirs:i}=this.project.getFilesAndDirs();e.endsWith("/")||(e+="/");const r=t.filter(t=>t.startsWith(e));return i.filter(t=>t.startsWith(e)).concat(r).filter(t=>t.slice(e.length).indexOf("/")<0).map(t=>t.slice(e.length))}watchFileChange(e){this._listeners.push(e)}}class Builder{constructor(e,t){this._getPreCompileProject=async()=>{const{targetPlatform:e,targetPlatformDefines:t}=this._options,i=await this.getPreCompiler(),r=await i.getPreCompileProject({targetPlatform:e,targetPlatformDefines:t,runEnv:"main process"});return await r.ready(),r},this._getSummerCompiler=async()=>{if(!this._summerCompiler){const{summerCompilerClass:e,projectInfo:t,cachePath:i="",devtoolMessagehub:r}=this._options,s=await this.getPreCompileProject(),o=await this.getAnalyzer();e?(this._summerCompiler=new e(s,i,t,r,o,this._options.filterFactory),await this._summerCompiler.ready()):this._summerCompiler=await(0,createSummer_1.getSummerCompiler)(s,o)}return this._summerCompiler},this.originProject=e,this._options=t}async getCompiler(){return this.getSummerCompiler()}async getAnalyzer(){if(this._analyzer)return this._analyzer;const e=await this.getPreCompileProject(),t={miniProgram:"miniprogram",miniGame:"game",miniProgramPlugin:"plugin",miniGamePlugin:"gamePlugin"}[this.originProject.type];return this._analyzer=new code_analyse_1.Analyzer({root:nodePath.join(e.projectPath,e.miniprogramRoot),type:t,fileHelper:new CodeDataFileHelper(e),compilerPlugins:(0,tools_1.getCompilerPlugins)(e)}),this._analyzer}async getPreCompileProject(){return this._precompileProject||(this._getPrecompileProjectTask||(this._getPrecompileProjectTask=new singletontask_1.SingletonTask(this._getPreCompileProject)),this._precompileProject=await this._getPrecompileProjectTask.getResult(!0)),this._precompileProject}async getPreCompiler(){if(!this._preCompiler){const{devtoolMessagehub:e,consoleDisplay:t}=this._options;this._preCompiler=new index_1.PreCompiler(this.originProject,e,t)}return this._preCompiler}async getSummerCompiler(){var e;return this._getSummerCompilerTask||(this._getSummerCompilerTask=new singletontask_1.SingletonTask(this._getSummerCompiler)),null===(e=this._getSummerCompilerTask)||void 0===e?void 0:e.getResult(!0)}async ready(){return this._checkReadyTask||(this._checkReadyTask=new singletontask_1.SingletonTask(this.init.bind(this))),await this._checkReadyTask.getResult()}async init(){}async getNativeCompiler(){return this._nativeCompiler||await this.initNativeCompiler(this._options),this._nativeCompiler}async initNativeCompiler(e){if("multiPlatform"!==this.originProject.projectArchitecture)return;const{miniappDirPath:t,devtoolsVersion:i,devtoolMessagehub:r}=e,s=await this.getPreCompileProject();this._nativeCompiler=new nativecompiler_1.NativeCompiler({project:s,devtoolMessagehub:r,devtoolsVersion:i,miniappDirPath:t}),await this._nativeCompiler.ready()}getPreCompileOptions(){var e,t;return{targetPlatform:null===(e=this._precompileProject)||void 0===e?void 0:e.targetPlatform,targetPlatformDefines:null===(t=this._precompileProject)||void 0===t?void 0:t.targetPlatformDefines}}async changePreCompileOptions(e){const t=await this.getPreCompileProject();(null==t?void 0:t.targetPlatform)!==e.targetPlatform&&(t.updateConditionCompileOptions(e),await new Promise(e=>setTimeout(e,500)))}async setLocale(e){(await this.getSummerCompiler()).setLocale(e)}destroy(){var e,t,i,r,s;(null===(e=this._summerCompiler)||void 0===e?void 0:e.isSummer)&&this._summerCompiler.destroy(),null===(t=this._analyzer)||void 0===t||t.destroy(),this._analyzer=void 0,null===(i=this._nativeCompiler)||void 0===i||i.destroy(),null===(s=null===(r=this.originProject)||void 0===r?void 0:r.destroy)||void 0===s||s.call(r)}}exports.Builder=Builder;