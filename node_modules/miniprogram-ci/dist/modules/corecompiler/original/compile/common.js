"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getUploadProjectConfig=exports.compileWXMLFiles=exports.compileWXSSFiles=exports.compileJSFiles=exports.compileOther=exports.isNotIgnoredByProjectConfig=exports.getBabelRoot=void 0;const tslib_1=require("tslib"),path_1=tslib_1.__importDefault(require("path")),tools_1=require("../../../../utils/tools"),taskstatus_1=require("../../../../utils/taskstatus"),index_1=require("../workerThread/index"),helper_util_1=require("../../../../utils/helper_util"),projectconfig_1=require("../json/projectconfig"),game_1=tslib_1.__importDefault(require("../json/game")),signaturejson_1=require("../json/signaturejson"),config_1=require("../../../../config/config"),taskmanager_1=tslib_1.__importDefault(require("../../../../utils/taskmanager")),wxml_1=require("./handler/wxml"),wxss_1=require("./handler/wxss"),js_1=require("./handler/js");async function getBabelRoot(o){var t,e;const i=(0,projectconfig_1.getProjectConfigJSON)(o);let s=null===(e=null===(t=null==i?void 0:i.setting)||void 0===t?void 0:t.babelSetting)||void 0===e?void 0:e.outputPath;return s?(s=(0,tools_1.normalizePath)(s),s.replace(/(^[./\\])|(\/$)/g,""),s):"@babel/runtime"}function isNotIgnoredByProjectConfig(o,t,e){var i,s;const n=path_1.default.posix.relative(t,e),a=(null===(i=o.packOptions)||void 0===i?void 0:i.include)||[];if((0,tools_1.isFileIncluded)(n,a))return!0;const r=(null===(s=o.packOptions)||void 0===s?void 0:s.ignore)||[];return!(0,tools_1.isFileIgnored)(path_1.default.posix.relative(t,e),r)}async function copyFile(o,t){return{filePath:t,code:o.getFile("",t)}}async function compileOther(o,t,e){const{onProgressUpdate:i=(()=>{})}=e,s=new taskstatus_1.TaskStatus("compiling other files");i(s);const n=new taskmanager_1.default;for(const e of t)n.addTask(copyFile,o,e);const a=await n.runAllAsync(),r={};for(const o of a){const{code:t,filePath:e}=o;t&&(r[e]=t)}return s.done(),i(s),r}async function canWeCompileJS(o,t,e){let i;for(const o of t)if((0,tools_1.normalizePath)(e).startsWith((0,tools_1.normalizePath)((0,signaturejson_1.trailing)(o.fullPath,"/")))){i=o;break}if(i){return i.signature.findIndex(o=>(0,tools_1.normalizePath)(o.fullPath)===(0,tools_1.normalizePath)(e))>=0}return!0}async function compileJSFiles(o,t,e,i){const{setting:s={}}=i;let n="@babel/runtime";s.enhance&&(n=await getBabelRoot(o));const a=[];if(o.type===config_1.COMPILE_TYPE.miniGame||o.type===config_1.COMPILE_TYPE.miniGamePlugin){const s=await(0,signaturejson_1.getAllPluginSignatures)(o);for(const r of t){const t=path_1.default.join(o.projectPath,e,r);await canWeCompileJS(o,s,t)&&a.push((0,js_1.compileJS)(o,r,Object.assign(Object.assign({},i),{babelRoot:n,root:e})))}}else for(const s of t)a.push((0,js_1.compileJS)(o,s,Object.assign(Object.assign({},i),{babelRoot:n,root:e})));let r=[];try{r=await Promise.all(a)}catch(o){throw(0,index_1.abortTask)(index_1.TASK_NAME.COMPILE_JS),o}const l={},c=new Set;for(const o of r){const{filePath:t,map:i,code:s,helpers:n}=o,a=(0,tools_1.formatSourceMap)(i);void 0!==s&&(l[path_1.default.posix.normalize(path_1.default.posix.join(e,t))]=s),a&&(l[path_1.default.posix.normalize(path_1.default.posix.join(e,t+".map"))]=a),n.length>0&&n.forEach(o=>{c.add(o)})}return await(0,helper_util_1.appendHelpers)(o,c,path_1.default.join(e),l),l}async function compileWXSSFiles(o,t,e,i){const s=[];for(const n of t)s.push((0,wxss_1.compileWXSS)(o,n,Object.assign(Object.assign({},i),{root:e})));let n=[];try{n=await Promise.all(s)}catch(o){throw(0,index_1.abortTask)(index_1.TASK_NAME.COMPILE_WXSS),o}const a={};for(const o of n){const{filePath:t,code:i}=o;void 0!==i&&(a[path_1.default.posix.normalize(path_1.default.posix.join(e,t))]=i)}return a}async function compileWXMLFiles(o,t,e,i){const s=[];for(const n of t)s.push((0,wxml_1.compileWXML)(o,n,Object.assign(Object.assign({},i),{root:e})));let n=[];try{n=await Promise.all(s)}catch(o){throw(0,index_1.abortTask)(index_1.TASK_NAME.MINIFY_WXML),o}const a={};for(const o of n){const{filePath:t,code:i}=o;void 0!==i&&(a[path_1.default.posix.normalize(path_1.default.posix.join(e,t))]=i)}return a}async function getUploadProjectConfig(o,t){const e={miniprogramRoot:t.miniprogramRoot,localPlugins:[]};t.pluginRoot&&(e.pluginRoot=t.pluginRoot);const i=(0,game_1.default)(o),s=(o,t="")=>{const i=e.localPlugins||[];for(const e in o)if(o.hasOwnProperty(e)&&o[e]&&"string"==typeof o[e].path){const s=o[e],n=path_1.default.posix.normalize(path_1.default.posix.join(t,s.path.replace(/\\/g,"/")).replace(/^\/+/,""));i.push({alias:e,provider:s.provider,path:n})}e.localPlugins=i};if(i.plugins){const{plugins:o}=i;s(o)}const n=i.subpackages||i.subPackages;if(Array.isArray(n))for(const o of n)(null==o?void 0:o.plugins)&&s(o.plugins,o.root||"");return e}exports.getBabelRoot=getBabelRoot,exports.isNotIgnoredByProjectConfig=isNotIgnoredByProjectConfig,exports.compileOther=compileOther,exports.compileJSFiles=compileJSFiles,exports.compileWXSSFiles=compileWXSSFiles,exports.compileWXMLFiles=compileWXMLFiles,exports.getUploadProjectConfig=getUploadProjectConfig;