"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GameConf=void 0;const tslib_1=require("tslib"),original_1=require("../../original"),locales_1=tslib_1.__importDefault(require("../../../../utils/locales/locales")),baseconf_1=require("./baseconf");class GameConf extends baseconf_1.BaseConf{constructor(){super(...arguments),this.packages=new Map,this.onFileChange=(e,t)=>{}}destroy(){}async getConf(e){return await this.build(e),{app:this.app,packages:Object.fromEntries(this.packages.entries())}}async buildPagesAndCompsForUpload(e,t=!1){return{pageResults:{},componentResults:{}}}async resetState(){this.app=void 0,this.packages.clear()}async load(e){var t;const s=await e.run(locales_1.default.config.SUMMER_COMPILE.format("game.json"),()=>(0,original_1.getGameJSON)(this.proxyProject));this.app=s;const o=s.subPackages||[];for(const e of o){const t=e.root.startsWith("/")?e.root.replace(/^\//,""):e.root;this.packages.set(t,Object.assign(Object.assign({},e),{root:t}))}s.openDataContext&&this.packages.set(s.openDataContext,{root:s.openDataContext,independent:!0,openDataContext:!0});const a="string"==typeof s.workers?s.workers:null===(t=s.workers)||void 0===t?void 0:t.path;a&&this.packages.set(a,{root:a,independent:!0,workers:!0})}}exports.GameConf=GameConf;