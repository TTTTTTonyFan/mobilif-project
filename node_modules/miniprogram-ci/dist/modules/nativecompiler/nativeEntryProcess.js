var _a,_b;process.env&&process.env.isDevtools&&require("../../utils/hackrequire/index"),Object.defineProperty(exports,"__esModule",{value:!0}),(null===(_a=process.env)||void 0===_a?void 0:_a.isDevtools)&&require("../../utils/hackrequire/index");const entryProcess_1=require("../../utils/subprocess/entryProcess"),progressRecorder_1=require("../../utils/progressRecorder"),nativeCompiler_1=require("./nativeCompiler");let nativeCompiler;async function initHandler(e){const{projectInfo:i,passData:a}=e.data,{miniappDirPath:r,devtoolsVersion:s}=a;nativeCompiler=new nativeCompiler_1.NativeCompiler({projectInfo:i,miniappDirPath:r,devtoolsVersion:s})}async function messageHandler(e){if(e.type,"request"===e.type){const{id:i,name:a,data:r}=e,s=i,n=new progressRecorder_1.Recorder((e,i,a)=>{process.send({type:"progress",id:e,taskId:s,status:i,message:a})});r.fullEnv&&(global.fullEnv=r.fullEnv);try{let e;const t=`${a}-${s}`;if("buildNative"===a)e=await n.run(t,async()=>await nativeCompiler.build(r,n));else if("runNative"===a)e=await n.run(t,async()=>await nativeCompiler.run(r,n));else if("buildNativePlugin"===a)e=await n.run(t,async()=>await nativeCompiler.buildPlugin(r,n));else if("packIOSCloudBuildMaterial"===a)e=await n.run(t,async()=>await nativeCompiler.packIOSCloudBuildMaterial(r,n));else if("initUSBConnectionProcess"===a)e=await n.run(t,async()=>await nativeCompiler.initUSBConnectionProcess(r,n));else{if("codesignIOSApp"!==a)throw new Error("unknown command "+a);e=await n.run(t,async()=>await nativeCompiler.codesignIOSApp(r,n))}process.send({type:"response",id:i,data:e})}catch(e){process.send({type:"response",id:i,data:null,error:{code:e.code||-1,message:e.message,stack:e.stack,path:e.path||""}})}}}(0,entryProcess_1.runSubProcess)({initHandler:initHandler,messageHandler:messageHandler,timeout:(null===(_b=process.env)||void 0===_b?void 0:_b.timeout)||3e5});