import { MiniProgramCore, MiniProgramDevtools } from '../../types';
export declare class SubProcessProxy {
    project: MiniProgramCore.IPreCompileProject;
    private entryPath;
    private passData;
    private initOptions;
    private inspectPort;
    private progressUpdate?;
    private process?;
    private taskMap;
    private taskId;
    private _checkReadyTask?;
    private _cpPromise?;
    constructor(project: MiniProgramCore.IPreCompileProject, entryPath: string, passData: {
        cachePath?: string;
        miniappDirPath?: string;
        devtoolsVersion?: string;
    }, initOptions: any, inspectPort?: number, progressUpdate?: MiniProgramDevtools.ProgressUpdate | undefined);
    private ready;
    private sendProcessMessage;
    private init;
    destroy(): void;
    private forkProcess;
    private onMessage;
    private onResponse;
    sendEvent(name: string, data: any): Promise<void>;
    runTask<T = any>(name: string, data?: any, progressUpdate?: MiniProgramDevtools.ProgressUpdate): Promise<T>;
}
