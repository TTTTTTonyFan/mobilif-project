/// <reference types="node" />
import { MiniProgramCore, ProjectConfigJSON } from '../../../../types';
export declare function getBabelRoot(project: MiniProgramCore.IPreCompileProject): Promise<string>;
export declare function isNotIgnoredByProjectConfig(projectConfig: MiniProgramCore.IAnyObject, root: string, file: string): boolean;
export declare function compileOther(project: MiniProgramCore.IPreCompileProject, files: string[], options: MiniProgramCore.ICompileOptions): Promise<{
    [filePath: string]: Buffer;
}>;
export declare function compileJSFiles(project: MiniProgramCore.IPreCompileProject, files: string[], root: string, options: MiniProgramCore.ICompileOptions): Promise<{
    [filePath: string]: string;
}>;
export declare function compileWXSSFiles(project: MiniProgramCore.IPreCompileProject, files: string[], root: string, options: MiniProgramCore.ICompileOptions): Promise<{
    [filePath: string]: string;
}>;
export declare function compileWXMLFiles(project: MiniProgramCore.IPreCompileProject, files: string[], root: string, options: MiniProgramCore.ICompileOptions): Promise<{
    [filePath: string]: string;
}>;
export declare function getUploadProjectConfig(project: MiniProgramCore.IPreCompileProject, projectConfig: ProjectConfigJSON.IProjectConfigJSON): Promise<MiniProgramCore.IAnyObject>;
