import { MiniProgramBaseConf } from './baseconf';
import { Recorder } from '../../../../utils/progressRecorder';
export declare class AppConf extends MiniProgramBaseConf {
    private app;
    private ext;
    private packages;
    private pages;
    private comps;
    private sitemap;
    private theme;
    destroy(): void;
    getConf(recorder: Recorder): Promise<{
        app: any;
        ext: any;
        packages: {
            [k: string]: any;
        };
        pages: {
            [k: string]: any;
        };
        comps: {
            [k: string]: any;
        };
        sitemap: any;
        theme: any;
    }>;
    buildPagesAndCompsForUpload(recorder: Recorder, disabelSpreadingUsingComponent?: boolean): Promise<{
        pageResults: Record<string, string>;
        componentResults: Record<string, string>;
    }>;
    buildPagesAndCompsWithFileListForUpload(recorder: Recorder, fileList: string[], disabelSpreadingUsingComponent?: boolean): Promise<{
        pageResults: Record<string, string>;
        componentResults: Record<string, string>;
    }>;
    onFileChange: (type: 'unlink' | 'unlinkDir' | 'add' | 'addDir' | 'change', path: string) => void;
    protected resetState(): Promise<void>;
    protected load(recorder: Recorder): Promise<void>;
    protected loadPage(path: string): Promise<void>;
    protected loadComp(resolvedPath: string, literalPath: string, from: string): Promise<void>;
    private loadTheme;
    private isExtendedLibComp;
}
