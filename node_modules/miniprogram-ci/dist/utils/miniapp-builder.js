"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.signAndInstallOrExport=exports.doCertificateSignAndInstallOrExport=exports.doAppleIdSignAndInstallOrExport=exports.clearCache=exports.getIOSDevices=exports.getMiniAppBuilderFromRemoteCore=exports.miniappSinTypes=exports.DEFAULT_BUNDLE_ID=void 0;const tslib_1=require("tslib"),child_process=tslib_1.__importStar(require("child_process")),lodash_1=tslib_1.__importDefault(require("lodash")),singletontask_1=require("./singletontask"),zip_1=require("./zip"),cp_1=require("./cp"),tools_1=require("./tools"),progressRecorder_1=require("./progressRecorder"),download_1=require("./download"),request_1=require("./request"),glob_1=tslib_1.__importDefault(require("glob")),miniappJson_1=require("./miniappJson"),generateIpa_1=require("./generateIpa"),path=require("path"),os=require("os"),fse=require("fs-extra"),querystring=require("querystring");exports.DEFAULT_BUNDLE_ID="com.tencent.devtoolssaaademo.db";const isMac="darwin"===process.platform,remoteUrlRoot="http://dldir1.qq.com/WechatWebDev/donut/miniapp-builder/";exports.miniappSinTypes={appleId:{type:"appleId"},certificate:{type:"certificate"}};const majorVersion="1",signAndInstallTask={};async function getMiniAppBuilderVersion(e="cli"){try{"dev"!==e&&"cli"!==e&&(e="release-1");const i=`${remoteUrlRoot}versionMap/${e}.json`,t=path.join(os.tmpdir(),"miniapp-builder-version.json");fse.existsSync(t)&&fse.removeSync(t),await(0,download_1.downloadLargeFile)(i,t);const n=fse.readJSONSync(t);return isMac?n.mac:n.win}catch(e){throw new Error("getMiniAppBuilderVersion fail: "+e.message)}}async function downloadMiniAppBuilder(e,i,t){const n=`${remoteUrlRoot}${isMac?"mac":"win"}/miniapp-builder-${e}.zip`,r=path.join(os.tmpdir(),"miniapp-builder.zip");fse.existsSync(r)&&fse.removeSync(r),null==t||t.progress("Downloading the miniapp-builder..."),await(0,download_1.downloadLargeFile)(n,r),await(0,zip_1.unzip)(r,i)}async function getMiniAppBuilderFromRemoteCore(e,i,t){const{miniappDirPath:n=path.join(__dirname,"../vendor"),devtoolsVersion:r="cli",recorder:s}=e,a=await getMiniAppBuilderVersion(r);let o="";const p=path.join(n,"miniapp-builder");if(o="win32"===process.platform?(0,tools_1.unifyPath)(path.join(p,a,i)):(0,tools_1.unifyPath)(path.join(p,a,t)),!fse.existsSync(o)){fse.ensureDirSync(p),fse.emptyDirSync(p);const e=path.dirname(o);fse.ensureDirSync(e),await downloadMiniAppBuilder(a,e,s);glob_1.default.sync("*",{nodir:!0,cwd:e}).forEach(i=>{fse.chmodSync(path.join(e,i),"777")})}return{builderPath:o,exe:path.basename(o),cwd:path.dirname(o)}}async function getMiniAppBuilder(e){return await getMiniAppBuilderFromRemoteCore(e,"MiniappBuilder.exe","MiniAppBuilder")}async function getIOSDevices(e){const{builderPath:i}=await getMiniAppBuilder(e),t=child_process.execSync(`"${i}" --action getDevices`,{}).toString().split("\n"),n=[];return t.forEach(e=>{if(e.trim()){const i=e.split("|");n.push({type:"device",name:(i[1]||"").trim(),version:(i[2]||"").trim(),udid:(i[3]||"").trim()})}}),n}async function clearCache(e){const{builderPath:i}=await getMiniAppBuilder(e),t=(0,miniappJson_1.getTargetMiniprogramArg)(e.projectPath,"appid");child_process.execSync(`"${i}" --appid ${t} --action clear --type ${e.type}`,{})}async function doAppleIdSignAndInstallOrExport(e,i,t){const{newRecorder:n,uniqueId:r}=genIOSFilterRecorder(t,i.recorder),{exe:s,cwd:a,builderPath:o}=await getMiniAppBuilder(i),p=(0,tools_1.unifyPath)(e.ipaPath),l=["--appid",(0,miniappJson_1.getTargetMiniprogramArg)(e.projectPath,"appid"),"--action","sign","--ipa",p,"--type","appleId"];if(e.appleId&&l.push("-ai",e.appleId),e.password&&l.push("-p",e.password),e.entitlements&&l.push("--entitlements",querystring.stringify(e.entitlements)),e.install&&(isMac?l.push("--install"):l.push("--install","true")),e.deviceId&&l.push("--deviceId",e.deviceId),e.output&&l.push("--output",e.output),e.bundleId){const i=e.bundleId===exports.DEFAULT_BUNDLE_ID?"auto":e.bundleId;l.push("--bundleId",i)}try{return signAndInstallTask[p]||(signAndInstallTask[p]=isMac?new singletontask_1.SingletonTask(cp_1.spawnSync.bind(null,o,l,{},n)):new singletontask_1.SingletonTask(cp_1.spawnSync.bind(null,s,l,{cwd:a},n))),await signAndInstallTask[p].getResult(!0),{success:!0}}catch(e){return{success:!1,uniqueId:r}}finally{delete signAndInstallTask[p]}}async function doCertificateSignAndInstallOrExport(e,i,t){const{newRecorder:n,uniqueId:r}=genIOSFilterRecorder(t,i.recorder),{exe:s,cwd:a,builderPath:o}=await getMiniAppBuilder(i),p=(0,miniappJson_1.tryGetIOSMiniappJson)(e.projectPath),l=(0,miniappJson_1.iOSMiniAppJsonIsUsingTpush)(p),d=e.miniappCacheDirPath||"",c=(0,tools_1.unifyPath)(e.ipaPath),u=["--appid",(0,miniappJson_1.getTargetMiniprogramArg)(e.projectPath,"appid"),"--action","sign","--miniappCacheDir",d,"--ipa",c,"--type","certificate"];e.entitlements&&u.push("--entitlements",querystring.stringify(e.entitlements)),e.install&&(isMac?u.push("--install"):u.push("--install","true")),l&&(isMac?u.push("--extensionProfilePath"):u.push("--extension","true")),e.deviceId&&u.push("--deviceId",e.deviceId),e.output&&u.push("--output",e.output);const{certificatePath:g,certificatePassword:h,profilePath:I}=e.selfCertificate||{};g&&h&&I&&(u.push("--certificatePath",g),u.push("--certificatePassword",h),u.push("--profilePath",I));try{return signAndInstallTask[c]||(signAndInstallTask[c]=isMac?new singletontask_1.SingletonTask(cp_1.spawnSync.bind(null,o,u,{},n)):new singletontask_1.SingletonTask(cp_1.spawnSync.bind(null,s,u,{cwd:a},n))),await signAndInstallTask[c].getResult(!0),{success:!0}}catch(e){return{success:!1,uniqueId:r}}finally{delete signAndInstallTask[c]}}async function signAndInstallOrExport(e,i,t,n,r,s){var a;const{signType:o,selfCertificate:p={}}=n,{recorder:l}=s,{install:d,deviceId:c,output:u,entitlements:g,bundleId:h}=r,I=!!r.isPublish,m=await(0,generateIpa_1.generateIpa)(i,I,l),{body:f}=await(0,request_1.request)({url:progressRecorder_1.TransformTipsURL,method:"get",headers:{"content-type":"application/json"}}),_=JSON.parse(f).ios;try{null==l||l.progress("signing the app...");let i=null;if(i=o===exports.miniappSinTypes.appleId.type?await doAppleIdSignAndInstallOrExport({bundleId:h,projectPath:e,ipaPath:m,entitlements:g,install:d,output:u,deviceId:c},s,_):await doCertificateSignAndInstallOrExport({projectPath:e,ipaPath:m,miniappCacheDirPath:t,entitlements:g,install:d,output:u,deviceId:c,selfCertificate:p},s,_),!i.success){let e="";throw i.uniqueId&&(null===(a=null===progressRecorder_1.IOSBuildMessageCache||void 0===progressRecorder_1.IOSBuildMessageCache?void 0:progressRecorder_1.IOSBuildMessageCache[i.uniqueId])||void 0===a?void 0:a.length)?(progressRecorder_1.IOSBuildMessageCache[i.uniqueId].forEach(e=>{null==l||l.message("error",e)}),e="IPA 构建失败，错误详细日志如上"):e="IPA 构建失败，请前往社区反馈[url:https://developers.weixin.qq.com/community/minihome/mixflow/2889188691586351105]",new Error(e)}}finally{fse.existsSync(m)&&fse.removeSync(m)}}function genUniqueId(){const e=lodash_1.default.uniqueId();return progressRecorder_1.IOSBuildMessageCache[e]?genUniqueId():e}function genIOSFilterRecorder(e,i){if(i){const t=genUniqueId();progressRecorder_1.IOSBuildMessageCache[t]=[];const n=new progressRecorder_1.Recorder((n,r,s)=>{const a=Object.keys(e).find(e=>s.includes(e));a&&progressRecorder_1.IOSBuildMessageCache[t].push(`[${e[a].code}] ${e[a].msg} 原信息：${s}`),i.message(r,s)});return n.run("!inner",()=>{}),{newRecorder:n,uniqueId:t}}return{newRecorder:void 0,uniqueId:void 0}}exports.getMiniAppBuilderFromRemoteCore=getMiniAppBuilderFromRemoteCore,exports.getIOSDevices=getIOSDevices,exports.clearCache=clearCache,exports.doAppleIdSignAndInstallOrExport=doAppleIdSignAndInstallOrExport,exports.doCertificateSignAndInstallOrExport=doCertificateSignAndInstallOrExport,exports.signAndInstallOrExport=signAndInstallOrExport;