"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const miniappJson_1=require("./miniappJson"),path=require("path"),fse=require("fs-extra"),androidI18NInfoRelativePath="miniapp/android/i18nInfo.json",iOSCloudI18NInfoRelativePath="miniapp/ios/i18nInfo.json",androidRelativePath="miniapp/android",iOSRelativePath="miniapp/ios";class MiniAppI18N{constructor(){this.i18nInfo={},this.ensureObject=i=>"[object Object]"===Object.prototype.toString.call(i)?i:{},this.createI18NInfo=i=>{const e=(0,miniappJson_1.getMiniappJson)(i).i18nFilePath;if(!e)return this.i18nInfo={},this.writeI18NInfoToAndroidFileSystem(i),void this.writeI18NInfoToiOSFileSystem(i);const n=path.resolve(i,e);fse.ensureDirSync(n);const t=fse.readdirSync(n,{withFileTypes:!0}).filter(i=>!i.isDirectory()&&i.name.endsWith(".json")),o={};t.forEach(i=>{const e=i.name.replace(".json",""),t=fse.readJsonSync(path.join(n,i.name));o[e]={ios:Object.assign(Object.assign({},this.ensureObject(null==t?void 0:t.common)),this.ensureObject(null==t?void 0:t.ios)),android:Object.assign(Object.assign({},this.ensureObject(null==t?void 0:t.common)),this.ensureObject(null==t?void 0:t.android))}}),this.i18nInfo=o,this.writeI18NInfoToAndroidFileSystem(i),this.writeI18NInfoToiOSFileSystem(i)},this.writeI18NInfoToAndroidFileSystem=i=>{i&&(fse.ensureDirSync(path.join(i,"miniapp/android")),fse.writeJSONSync(path.join(i,androidI18NInfoRelativePath),this.i18nInfo))},this.writeI18NInfoToiOSFileSystem=i=>{i&&(fse.ensureDirSync(path.join(i,"miniapp/ios")),fse.writeJSONSync(path.join(i,"miniapp/ios/i18nInfo.json"),this.i18nInfo))}}}exports.default=new MiniAppI18N;