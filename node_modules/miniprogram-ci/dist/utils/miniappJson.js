"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.autoCompleteIOSPrivacyDesc=exports.isAndroidNeedClientJsExtInfo=exports.iosPrivacyDescObj=exports.getTargetMiniprogramArg=exports.getMiniprogramRoot=exports.getRawAppJSON=exports.iOSAppJsonIsUsingIPadResizable=exports.iOSMiniAppJsonIsUsingGDT=exports.iOSMiniAppJsonIsUsingTpush=exports.writeMiniAppJsonWithProjectPath=exports.isNewMiniAppProjectWithProjectPath=exports.isMiniAppProjectWithProjectPath=exports.tryGetPluginMiniappJson=exports.tryGetIOSMiniappJson=exports.tryGetAndroidMiniappJson=exports.getMiniappJson=exports.getRawMiniappJson=exports.identityServiceConfigToMiniAppJSON=exports.PLATFORM=exports.miniAppPlatformMap=void 0;const tools_1=require("./tools"),officialDonutPlugin_1=require("./officialDonutPlugin"),tools_2=require("../utils/tools"),each=require("licia/each"),safeSet=require("licia/safeSet"),path=require("path"),fse=require("fs-extra"),_=require("lodash");var PLATFORM;function identityServiceConfigToMiniAppJSON(i,e={}){return e.identityServiceConfig=Object.assign(Object.assign({},e.identityServiceConfig),{authorizeMiniprogramType:1,miniprogramLoginPath:i}),e}function getRawMiniappJson(i){var e,o,t,n,s,p,r,a,c;i=(0,tools_1.unifyPath)(i);const g=path.posix.join(i,"project.miniapp.json");if(!fse.existsSync(g))return{};let P={};try{P=fse.readJsonSync(g)}catch(i){console.error(i)}return P.miniVersion&&"v1"!==P.miniVersion||((null===(e=P[PLATFORM.ANDROID])||void 0===e?void 0:e.projectPath)&&!path.isAbsolute(null===(o=P[PLATFORM.ANDROID])||void 0===o?void 0:o.projectPath)&&(P[PLATFORM.ANDROID].projectPath=path.posix.join(i,null===(t=P[PLATFORM.ANDROID])||void 0===t?void 0:t.projectPath)),(null===(n=P[PLATFORM.IOS])||void 0===n?void 0:n.projectPath)&&!path.isAbsolute(null===(s=P[PLATFORM.IOS])||void 0===s?void 0:s.projectPath)&&(P[PLATFORM.IOS].projectPath=path.posix.join(i,null===(p=P[PLATFORM.IOS])||void 0===p?void 0:p.projectPath))),(null===(r=P[PLATFORM.ANDROID])||void 0===r?void 0:r.projectPath)&&!path.isAbsolute(null===(a=P[PLATFORM.ANDROID])||void 0===a?void 0:a.projectPath)&&(P[PLATFORM.ANDROID].projectPath=path.posix.join(i,null===(c=P[PLATFORM.ANDROID])||void 0===c?void 0:c.projectPath)),P}function getMiniappJson(i,e="mini-weixin"){const o=Object.values(exports.miniAppPlatformMap),t=getRawMiniappJson(i),n=_.omit(t,o);return _.merge(n,t[e]||("mini-weixin"===e?t["mini-wechat"]:{}))}function tryGetAndroidMiniappJson(i){let e;try{e=getMiniappJson(i,PLATFORM.ANDROID);const o=tryGetPluginMiniappJson(i);e&&(e["mini-plugin"]=o)}catch(i){}return e||{}}function tryGetIOSMiniappJson(i){let e;try{e=getMiniappJson(i,PLATFORM.IOS);const o=tryGetPluginMiniappJson(i);e&&(e["mini-plugin"]=o)}catch(i){}return e}function tryGetPluginMiniappJson(i){let e={};try{const o=getMiniappJson(i,PLATFORM.PLUGIN),t=getRawMiniappJson(i);e=(0,officialDonutPlugin_1.preprocessDonutPluginConfig)(o,t)}catch(i){}return e}function isMiniAppProjectWithProjectPath(i){const e=path.posix.join(i,"project.miniapp.json");return"multiPlatform"===fse.readJsonSync(e).projectArchitecture}function isNewMiniAppProjectWithProjectPath(i){const e=getRawMiniappJson(i);return isMiniAppProjectWithProjectPath(i)&&"v2"===e.miniVersion}function writeMiniAppJsonWithProjectPath(i,e){const o=path.posix.join(i,"project.miniapp.json");let t={};try{t=fse.readJsonSync(o)}catch(i){return}each(e,(i,e)=>{safeSet(t,e,i)}),fse.writeJSONSync(o,t,{spaces:2})}function iOSMiniAppJsonIsUsingTpush(i){const e=i.tpush&&!0===i.tpush.useExtendedLib_WeAppTPNS&&"number"==typeof i.tpush.accessID&&"string"==typeof i.tpush.accessKey&&"string"==typeof i.tpush.serviceBundleId;if(e&&(0,tools_1.compareVersion)(i.sdkVersion,"1.0.7")<=0)throw new Error(`can not use TPNS(消息推送) extendsdk in sdk version ${i.sdkVersion}, TPNS is supported in 1.0.8.`);return e}function iOSMiniAppJsonIsUsingGDT(i){const e=i.gdt&&!0===i.gdt.useExtendedLib_WeAppGDT&&"string"==typeof i.gdt.appid&&"string"==typeof i.gdt.splashAd_placementId;if(e&&(0,tools_1.compareVersion)(i.sdkVersion,"1.0.19")<=0)throw new Error(`can not use GDT(广告) extendsdk in sdk version ${i.sdkVersion}, GDT is supported in 1.0.20.`);return e}function iOSAppJsonIsUsingIPadResizable(i){return!0===getRawAppJSON(i).resizable}function getRawAppJSON(i){let e,o;const t=getMiniprogramRoot(i);e=t?path.posix.join(i,t,"app.json"):path.posix.join(i,"app.json");try{o=fse.readJsonSync(e)}catch(i){throw console.error(i),i}return o}function getMiniprogramRoot(i){const e=(0,tools_1.normalizePath)(path.posix.join(i,"project.config.json"));let o;try{o=fse.readJsonSync(e)}catch(i){throw console.error(i),i}return o.miniprogramRoot?o.miniprogramRoot:""}function getTargetMiniprogramArg(i,e){const o=(0,tools_1.normalizePath)(path.posix.join(i,"project.config.json"));let t;try{t=fse.readJsonSync(o)}catch(i){throw console.error(i),i}return t[e]||""}function isAndroidNeedClientJsExtInfo(i){const e=tryGetAndroidMiniappJson(i).sdkVersion;return(0,tools_2.compareSemVer)(e,"1.3.25")>0?1:0}exports.miniAppPlatformMap={"mini-android":"mini-android","mini-ios":"mini-ios","mini-weixin":"mini-weixin"},function(i){i.ANDROID="mini-android",i.IOS="mini-ios",i.PLUGIN="mini-plugin"}(PLATFORM=exports.PLATFORM||(exports.PLATFORM={})),exports.identityServiceConfigToMiniAppJSON=identityServiceConfigToMiniAppJSON,exports.getRawMiniappJson=getRawMiniappJson,exports.getMiniappJson=getMiniappJson,exports.tryGetAndroidMiniappJson=tryGetAndroidMiniappJson,exports.tryGetIOSMiniappJson=tryGetIOSMiniappJson,exports.tryGetPluginMiniappJson=tryGetPluginMiniappJson,exports.isMiniAppProjectWithProjectPath=isMiniAppProjectWithProjectPath,exports.isNewMiniAppProjectWithProjectPath=isNewMiniAppProjectWithProjectPath,exports.writeMiniAppJsonWithProjectPath=writeMiniAppJsonWithProjectPath,exports.iOSMiniAppJsonIsUsingTpush=iOSMiniAppJsonIsUsingTpush,exports.iOSMiniAppJsonIsUsingGDT=iOSMiniAppJsonIsUsingGDT,exports.iOSAppJsonIsUsingIPadResizable=iOSAppJsonIsUsingIPadResizable,exports.getRawAppJSON=getRawAppJSON,exports.getMiniprogramRoot=getMiniprogramRoot,exports.getTargetMiniprogramArg=getTargetMiniprogramArg,exports.iosPrivacyDescObj={NSPhotoLibraryUsageDescription:"当前应用程序需要访问用户的相册，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NSCameraUsageDescription:"当前应用程序需要访问用户的相机，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NSMicrophoneUsageDescription:"当前应用程序需要访问用户的麦克风，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NSLocationWhenInUseUsageDescription:"当前应用程序需要在使用时访问用户的位置，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NSLocationAlwaysUsageDescription:"当前应用程序需要始终访问用户的位置，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NSLocationAlwaysAndWhenInUseUsageDescription:"当前应用程序需要始终和在使用时访问用户的位置，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NSContactsUsageDescription:"当前应用程序需要访问用户的联系人，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NSCalendarsUsageDescription:"当前应用程序需要访问用户的日历，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NSRemindersUsageDescription:"当前应用程序需要访问用户的提醒事项，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NSHealthShareUsageDescription:"",NSHealthUpdateUsageDescription:"",NSBluetoothPeripheralUsageDescription:"当前应用程序需要访问用户的蓝牙，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NSBluetoothAlwaysUsageDescription:"当前应用程序需要始终访问用户的蓝牙，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NSMotionUsageDescription:"",NSHomeKitUsageDescription:"",NSSiriUsageDescription:"",NSSpeechRecognitionUsageDescription:"当前应用程序需要使用语音识别，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NSVideoSubscriberAccountUsageDescription:"",NSAppleMusicUsageDescription:"",NSFaceIDUsageDescription:"",NSNFCReaderUsageDescription:"",NSUserTrackingUsageDescription:"",NSLocalNetworkUsageDescription:"当前应用程序需要访问本地网络，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NSSystemAdministrationUsageDescription:"当前应用程序需要进行系统管理操作，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可」",NFCReaderUsageDescription:"",NSHealthClinicalHealthRecordsShareUsageDescription:"",NSPhotoLibraryAddUsageDescription:"应用程序在请求访问照片库，如需修改描述请前往「project.miniapp.json - 隐私信息访问许可描述」修改，并且关闭「自动使用默认描述补全默认隐私信息访问许可"},exports.isAndroidNeedClientJsExtInfo=isAndroidNeedClientJsExtInfo;const autoCompleteIOSPrivacyDesc=i=>{const e=getRawMiniappJson(i);return!(!e["mini-ios"]||!e["mini-ios"].enableAutoCompletePrivacyDesc&&void 0!==e["mini-ios"].enableAutoCompletePrivacyDesc)&&(e["mini-ios"].privateDescriptions||(e["mini-ios"].privateDescriptions={}),Object.keys(exports.iosPrivacyDescObj).forEach(i=>{!e["mini-ios"].privateDescriptions[i]&&exports.iosPrivacyDescObj[i]&&(e["mini-ios"].privateDescriptions[i]=exports.iosPrivacyDescObj[i])}),writeMiniAppJsonWithProjectPath(i,e),!0)};exports.autoCompleteIOSPrivacyDesc=autoCompleteIOSPrivacyDesc;